{"version":3,"sources":["contextData.ts","konvaFunctions.ts","InputArea.tsx","ClippingBoxes.tsx","OutputArea.tsx","canvasFunctions.ts","defaultConfig.ts","App.tsx","index.tsx"],"names":["boxesPropsContext","createContext","setBoxesPropsContext","useBoxesProps","useContext","getRelativePointerPosition","ref","current","node","transform","getAbsoluteTransform","copy","invert","pos","getStage","getPointerPosition","point","SelectionRect","beginPos","endPos","x","y","width","height","fill","stroke","opacity","InputArea","layoutSize","setBoxesProps","useState","mouseDownPos","setMouseDownPos","dragging","setDragging","inputAreaRef","useRef","className","onMouseDown","onMouseUp","relativePos","preState","key","length","srcX","srcY","srcWidth","srcHeight","showX","showY","showWidth","showHeight","addBoxProps","ClippingBoxes","currentFrame","boxesProps","map","boxProps","image","crop","strokeWidth","draggable","OutputArea","baseCanvas","Provider","value","createCanvas","size","canvas","document","createElement","videoConstraints","facingMode","cameraSize","App","setBaseCanvas","cameraRef","frameInterval","useEffect","setInterval","canvasSize","video","ctx","getContext","drawImage","getImageData","l","data","i","grayscale","makeGrayscale","putImageData","refreshFrame","clearInterval","id","audio","style","position","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.57a19b4d.chunk.js","sourcesContent":["import { createContext, Dispatch, SetStateAction, useContext } from \"react\";\r\n\r\nexport const boxesPropsContext = createContext<BoxProps[]>([]);\r\nexport const setBoxesPropsContext = createContext<\r\n  Dispatch<SetStateAction<BoxProps[]>>\r\n>(() => {});\r\n\r\nexport const useBoxesProps = () => useContext(boxesPropsContext);\r\nexport const useSetBoxesProps = () => useContext(setBoxesPropsContext);\r\n","import Konva from \"konva\";\r\nimport { Vector2d } from \"konva/types/types\";\r\n\r\nconst getRelativePointerPosition = (\r\n  ref: React.RefObject<Konva.Stage>\r\n): Vector2d | null => {\r\n  if (!ref.current) return null;\r\n  const node = ref.current;\r\n  const transform = node.getAbsoluteTransform().copy();\r\n  transform.invert();\r\n  const pos = node.getStage().getPointerPosition()!;\r\n\r\n  return transform.point(pos);\r\n};\r\n\r\nexport { getRelativePointerPosition };\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Layer, Stage, Rect } from \"react-konva\";\r\nimport { useSetBoxesProps } from \"./contextData\";\r\n\r\nimport Konva from \"konva\";\r\nimport { Vector2d } from \"konva/types/types\";\r\nimport { getRelativePointerPosition } from \"./konvaFunctions\";\r\n\r\nconst SelectionRect: React.FC<{\r\n  beginPos: Vector2d;\r\n  endPos: Vector2d;\r\n}> = ({ beginPos, endPos }) => {\r\n  return (\r\n    <Rect\r\n      x={beginPos.x}\r\n      y={beginPos.y}\r\n      width={endPos.x - beginPos.x}\r\n      height={endPos.y - beginPos.y}\r\n      fill={\"blue\"}\r\n      stroke={\"red\"}\r\n      opacity={0.2}\r\n    />\r\n  );\r\n};\r\n\r\nconst InputArea: React.FC<{\r\n  layoutSize: RectSize;\r\n}> = ({ layoutSize }) => {\r\n  const setBoxesProps = useSetBoxesProps();\r\n  const [mouseDownPos, setMouseDownPos] = useState<Vector2d>({ x: 0, y: 0 });\r\n  const [dragging, setDragging] = useState<Boolean>(false);\r\n\r\n  const inputAreaRef = useRef<Konva.Stage>(null);\r\n\r\n  const addBoxProps = () => {\r\n    const relativePos = getRelativePointerPosition(inputAreaRef) || {\r\n      x: 0,\r\n      y: 0,\r\n    };\r\n    setBoxesProps((preState) => [\r\n      ...preState,\r\n      {\r\n        key: preState.length,\r\n        srcX: relativePos.x,\r\n        srcY: relativePos.y,\r\n        srcWidth: mouseDownPos.x - relativePos.x,\r\n        srcHeight: mouseDownPos.y - relativePos.y,\r\n        showX: relativePos.x,\r\n        showY: relativePos.y,\r\n        showWidth: mouseDownPos.x - relativePos.x,\r\n        showHeight: mouseDownPos.y - relativePos.y,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <Stage\r\n      className=\"input-area\"\r\n      width={layoutSize.width}\r\n      height={layoutSize.height}\r\n      ref={inputAreaRef}\r\n      onMouseDown={() => {\r\n        setMouseDownPos(\r\n          getRelativePointerPosition(inputAreaRef) || { x: 0, y: 0 }\r\n        );\r\n        setDragging(true);\r\n      }}\r\n      onMouseUp={() => {\r\n        addBoxProps();\r\n        setDragging(false);\r\n      }}\r\n    >\r\n      <Layer>\r\n        {dragging ? (\r\n          <SelectionRect\r\n            beginPos={mouseDownPos}\r\n            endPos={getRelativePointerPosition(inputAreaRef) || { x: 0, y: 0 }}\r\n            // FIXME: endPosの更新タイミングで描画されず、baseCanvasの更新により描画されている。\r\n          />\r\n        ) : null}\r\n      </Layer>\r\n    </Stage>\r\n  );\r\n};\r\n\r\nexport default InputArea;\r\n","import React from \"react\";\r\nimport { Image } from \"react-konva\";\r\nimport { useBoxesProps } from \"./contextData\";\r\n\r\nconst ClippingBoxes: React.FC<{\r\n  currentFrame: CanvasImageSource;\r\n}> = ({ currentFrame }) => {\r\n  const boxesProps = useBoxesProps();\r\n\r\n  return (\r\n    <>\r\n      {(() =>\r\n        boxesProps.map((boxProps) => (\r\n          <Image\r\n            key={boxProps.key}\r\n            image={currentFrame}\r\n            crop={{\r\n              x: boxProps.srcX,\r\n              y: boxProps.srcY,\r\n              width: boxProps.srcWidth,\r\n              height: boxProps.srcHeight,\r\n            }}\r\n            x={boxProps.showX}\r\n            y={boxProps.showY}\r\n            width={boxProps.showWidth}\r\n            height={boxProps.showHeight}\r\n            stroke={\"black\"}\r\n            strokeWidth={10}\r\n            draggable\r\n          />\r\n        )))()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClippingBoxes;\r\n","import React from \"react\";\r\nimport { Stage, Layer, Image } from \"react-konva\";\r\nimport ClippingBoxes from \"./ClippingBoxes\";\r\nimport { useBoxesProps, boxesPropsContext } from \"./contextData\";\r\n\r\nconst OutputArea: React.FC<{\r\n  layoutSize: RectSize;\r\n  baseCanvas: CanvasImageSource;\r\n}> = ({ layoutSize, baseCanvas }) => {\r\n  // Contextは<Stage>を通り抜けないためブリッジする必要がある\r\n  const boxesProps = useBoxesProps();\r\n\r\n  return (\r\n    <Stage\r\n      className=\"output-area\"\r\n      width={layoutSize.width}\r\n      height={layoutSize.height}\r\n    >\r\n      <boxesPropsContext.Provider value={boxesProps}>\r\n        <Layer>\r\n          <Image image={baseCanvas} />\r\n          <ClippingBoxes currentFrame={baseCanvas} />\r\n        </Layer>\r\n      </boxesPropsContext.Provider>\r\n    </Stage>\r\n  );\r\n};\r\n\r\nexport default OutputArea;\r\n","export const createCanvas = (size: RectSize) => {\r\n  const canvas = document.createElement(\"canvas\");\r\n  canvas.width = size.width;\r\n  canvas.height = size.height;\r\n\r\n  return canvas;\r\n};\r\n\r\n// グレイスケールならCSSでもできる。その場合はcanvasごとにフィルターがかかるため構造を変える必要がありそう。\r\nexport const makeGrayscale = (image: ImageData) => {\r\n  const l = image.data.length / 4;\r\n  for (let i = 0; i < l; i++) {\r\n    const grayscale =\r\n      image.data[i * 4 + 0] * 0.299 +\r\n      image.data[i * 4 + 1] * 0.587 +\r\n      image.data[i * 4 + 2] * 0.114;\r\n\r\n    image.data[i * 4 + 0] = grayscale;\r\n    image.data[i * 4 + 1] = grayscale;\r\n    image.data[i * 4 + 2] = grayscale;\r\n  }\r\n};\r\n","import Webcam from \"react-webcam\";\r\n\r\nexport const videoConstraints: Webcam[\"props\"][\"videoConstraints\"] = {\r\n  width: 1280,\r\n  height: 720,\r\n  facingMode: \"user\",\r\n};\r\n\r\nexport const cameraSize = {\r\n  ...videoConstraints,\r\n} as RectSize;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport InputArea from \"./InputArea\";\r\nimport OutputArea from \"./OutputArea\";\r\nimport { setBoxesPropsContext, boxesPropsContext } from \"./contextData\";\r\n\r\nimport { createCanvas, makeGrayscale } from \"./canvasFunctions\";\r\nimport { cameraSize, videoConstraints } from \"./defaultConfig\";\r\n\r\nconst App: React.FC = () => {\r\n  const [baseCanvas, setBaseCanvas] = useState(createCanvas(cameraSize));\r\n  const [boxesProps, setBoxesProps] = useState<BoxProps[]>([]);\r\n\r\n  const cameraRef = useRef<Webcam>(null);\r\n  const frameInterval = useRef<NodeJS.Timeout>();\r\n\r\n  const FPS = 60;\r\n  useEffect(() => {\r\n    const refreshFrame = (canvasSize: RectSize) => {\r\n      if (!(cameraRef.current && cameraRef.current.video)) return;\r\n      const ctx = createCanvas(canvasSize).getContext(\"2d\");\r\n\r\n      if (!ctx) return;\r\n      ctx.drawImage(cameraRef.current.video, 0, 0);\r\n\r\n      const image = ctx.getImageData(0, 0, canvasSize.width, canvasSize.height);\r\n      makeGrayscale(image);\r\n      ctx.putImageData(image, 0, 0);\r\n\r\n      setBaseCanvas(ctx.canvas);\r\n    };\r\n\r\n    frameInterval.current = setInterval(\r\n      () => refreshFrame(cameraSize),\r\n      1000 / FPS\r\n    );\r\n\r\n    return () => {\r\n      clearInterval(frameInterval.current!);\r\n    };\r\n  }, [FPS]);\r\n\r\n  return (\r\n    <section id=\"app\">\r\n      <Webcam\r\n        id=\"camera\"\r\n        ref={cameraRef}\r\n        audio={false}\r\n        videoConstraints={videoConstraints}\r\n        width={cameraSize.width}\r\n        height={cameraSize.height}\r\n        style={{ position: \"absolute\" }}\r\n      />\r\n      <setBoxesPropsContext.Provider value={setBoxesProps}>\r\n        <InputArea layoutSize={cameraSize} />\r\n      </setBoxesPropsContext.Provider>\r\n      <boxesPropsContext.Provider value={boxesProps}>\r\n        <OutputArea layoutSize={cameraSize} baseCanvas={baseCanvas} />\r\n      </boxesPropsContext.Provider>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}